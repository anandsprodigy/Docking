#networking

#ping

#telnet port 23 (TCP)
#SSH port 22 (TCP)

Telnet and SSH used to connect to other device or PC. However; telnet is not secure.

One of the greatest disadvantages of this protocol is that all data, including usernames and passwords, is sent in clear text, 
which is a potential security risk. 
This is the main reason why Telnet is rarely used today and is being replaced by a much secure protocol called SSH. 


#Networking Firewall

The firewall
A firewall is a set of rules. When a data packet moves into or out of a protected network space, 
its contents (in particular, information about its origin, target, and the protocol it plans to use) are tested against the firewall rules
to see if it should be allowed through.

#On the one hand, iptables is a tool for managing firewall rules on a Linux machine.

#On the other hand, firewalld is also a tool for managing firewall rules on a Linux machine.

#Ubuntu includes its own firewall, known as ufw – short for “uncomplicated firewall.”
Ufw is an easier-to-use frontend for the standard Linux iptables commands.

https://www.hostinger.in/tutorials/iptables-tutorial 

#list tables 
iptables -L -n

If it shows error that to update/upgraade kernel then use below commands

https://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/

sudo apt-get update --> Only checks for updates
sudo apt-get upgrade --> install updates

apt-get update --> updates the list of available packages and their versions, but it does not install or upgrade any packages.
apt-get upgrade --> actually installs newer versions of the packages you have. After updating the lists, the package manager knows about available updates for the software you have installed.

https://www.youtube.com/watch?v=TzT0DoqisTc

https://phoenixnap.com/kb/iptables-tutorial-linux-firewall

#list iptables

root@ubuntu:~# iptables -L -n
Chain INPUT (policy ACCEPT)
target     prot opt source               destination         

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination         

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination  


root@ubuntu:~# iptables -L -v
Chain INPUT (policy ACCEPT 58 packets, 3984 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 10 packets, 871 bytes)
 pkts bytes target     prot opt in     out     source               destination         


#nmap scanning ports and host
nmap scanme.nmap.org

nmap 192.168.0.*

nmap -p 80 192.168.0.1   #port 80 scan

nmap -p 80,53 192.168.0.1   #port 80 and 53 scan

nmap -p 1-1000 192.168.0.1   #port 1-1000 scan

nmap -sV 192.168.0.1   #get service version

