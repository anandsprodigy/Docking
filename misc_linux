#Basic configuration settings 
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/getting-started-with-system-administration_configuring-basic-system-settings


Pretty host name
My Machine
Host name
mymachine
Real host name - fully qualified domain name (FQDN)
mymachine.idm.company.com

#get language locale for the machine

> locale

#get hostname

>hostname

#set date
 date –set=”Date_in_format(YYMMDD) Time_in_format(HH:MM)
 
 #how long system is up
 >uptime
 
 #zip files
 zip Files.zip Check.txt Test.txt Output.txt
 
 #unzip files
 unzip Files.zip
 
 
 #Convenient way to check if system is using systemd or sysvinit in BASH? 
 --> check ps aux and pid 1 will show the process.
 
 the init (initialization) process is the first process executed by the kernel at boot time. It has a process ID (PID) of 1, 
 it is executed in the background until the system is shut down.
 The init process starts all other processes, that is daemons, services and other background processes, 
 therefore, it is the mother of all other processes on the system.
 A process can start many other child processes on the system, but in the event that a parent process dies, 
 init becomes the parent of the orphan process.
 
 
 The need to replace init with something more perfect was felt from a long time and several alternatives were developed from time-to-time, some of which became distribution’s native init replacement, some of which are:

Upstart – A init replacement daemon implemented in Ubuntu GNU/Linux and designed to start process asynchronously.
Epoch – A init replacement daemon built around simplicity and service management, designed to start process single-threaded.
Mudar – A init replacement daemon written in Python, implemented on Pardus GNU/Linux and designed to start process asynchronously.
systemd – A init replacement daemon designed to start process in parallel, implemented in a number of standard distribution – Fedora, OpenSuSE, Arch, RHEL, CentOS, etc.


https://www.tecmint.com/systemd-replaces-init-in-linux/


#difference in files

diff simple.txt simple2.txt

#linux epoch time
The Unix epoch (or Unix time or POSIX time or Unix timestamp) is the number of seconds that have elapsed since January 1, 1970

#.bash_profile is executed for login shells, while .bashrc is executed for interactive non-login shells.

-rw-r--r-- 1 root root  220 Feb 25 17:33 .bash_logout
-rw-r--r-- 1 root root 3771 Feb 25 17:33 .bashrc
-rw-r--r-- 1 root root  807 Feb 25 17:33 .profile

Ubuntu files

Profile and bash_logout are execuated on login. bashrc executed when user opens terminal.

# The SKEL variable specifies the directory containing "skeletal" user
# files; in other words, files such as a sample .profile that will be
# copied to the new user's home directory when it is created.
# SKEL=/etc/skel

When you want to create any files/folders into user directory then copy files in /etc/skel

 ~/.profile

