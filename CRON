#Website for CRON expression
https://crontab.guru/ 

>crontab -e
no crontab for anand - using an empty one

Select an editor.  To change later, run 'select-editor'.
  1. /bin/nano        <---- easiest
  2. /usr/bin/vim.basic
  3. /usr/bin/vim.tiny
  4. /bin/ed

Choose 1-4 [1]: 1
crontab: installing new crontab

#show all crontab 
crontab -e

#for specific user 
crontab -u username -e

#list cron jobs
crontab -l

#min hour day(month) month day(week)

* * * * * every minutes

CROND is service running for cron

Cron is running their own shell. Hence, no echo is displayed


#start crond service

sudo /etc/init.d/cron start

#run cron every 4 hr interval
0 */4 * * * /scripts/script.sh 

#multiple task in single cron job
* * * * * /scripts/script.sh; /scripts/scrit2.sh

#run cron at reboot
@reboot /scripts/script.sh

#run cron daily
@daily /scripts/script.sh

OR 

0 0 * * * /scripts/script.sh

https://tecadmin.net/crontab-in-linux-with-20-examples-of-cron-schedule/


[Minute] [hour] [Day_of_the_Month] [Month_of_the_Year] [Day_of_the_Week] [command]

Astrics (*) – Matches anything
Define range – You can define range using the hypen like: 1-10 or 20-30 or sun-fri or feb-apr
Define multiple range – You can define multiple ranges with command seprated like: jan-mar,jul-sep

#cron itself can't alert you if your jobs fail or never start.

#System wide cron 
/etc/cron.d
/etc/cron.daily
/etc/cron.hourly
/etc/cron.monthly
/etc/cron.weekly

#Allowed characters
Asterik(*) – Match all values in the field or any possible value.
Hyphen(-) – To define range.
Slash (/) – 1st field /10 meaning every ten minute or increment of range.
Comma (,) – To separate items.

#common schedules
@reboot	Command will run when the system reboot.
@daily	Once per day or may use @midnight.
@weekly	Once per week.
@yearly	Once per year. we can use @annually keyword also.
