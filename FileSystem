File System in Linux

File system is logical collection of files on partition or disk

It is normal to have n=more than 1 partitions

#partition naming

/dev/xxyN

dev is name of the directory where all device files presents
xx is type of the device on which partition is present hd is for IDE disks and sd is for SCSI disks
y device on which partition is present
N denotes partiotion 1-4 (Primary) >5 (logical)

FIle system/Partition config files

#fstab - static information about the filesystems

/etc/fstab is file contains all available disks, partitions and mounts.
Each line contains six fields as follows

1) Device
2) Mount point/path
3) File System
4) Options --> default option is defaults.
5) Backup option [0 or 1](if value == 1; then dump utility will take backup)
6) File system check order --> 0 means fsdisk will not check file system. Higher number will be order for checking file system.

Sample Line from /etc/fstab
/dev/sda1	/mnt/demo	ext4	acl,users_xattr	0	0


#get UUID for the block device e.g. HDD
blkid /dev/sda3
/dev/sda3: LABEL="2G" UUID="f80b1161-c490-4bc8-990b-30a47609e91f" TYPE="ext4" PARTUUID="0d65f401-03"


#list devices
ls /dev


#inode
An inode is a data structure that stores various information about a file in Linux, such as the access mode (read, write, execute permissions), ownership, file type, file size, group, number of links, etc. Each inode is identified by an integer number. An inode is assigned to a file when it is created.

Some file systems (most notably ext3) create all inodes when the file system is created. This means that it is possible to run out of storage because all of the inodes are used, although there is available space on the disk. Other file systems (like xfs) create inodes as needed.

#get inode counts
df -ih

Filesystem     Inodes IUsed IFree IUse% Mounted on
rootfs            999 -976K  977K     - /



none              999 -976K  977K     - /dev

#get inode for file
 ls -il
 
 #get stat about file inode
 
>stat simple.txt
  File: simple.txt
  Size: 70              Blocks: 0          IO Block: 512    regular file
Device: 2h/2d   Inode: 1970324837250862  Links: 1
Access: (0666/-rw-rw-rw-)  Uid: ( 1000/   anand)   Gid: ( 1000/   anand)
Access: 2020-06-09 10:19:05.306685200 +0530
Modify: 2020-06-09 17:01:32.094964700 +0530
Change: 2020-06-09 17:01:32.094964700 +0530
 Birth: -
 
 #inode for directory
ls -ild
2533274790517518 drwxr-xr-x 1 anand anand 512 Jun  9 16:32 .


#There are 3 kind of "timestamps":

Access - the last time the file was read
Modify - the last time the file was modified (content has been modified)
Change - the last time meta data of the file was changed (e.g. permissions)


Last access time
Time when file data last accessed.
Changed by the mknod(2), utimes(2) and read(2) system calls.

Last modified time
Time when file data last modified.
Changed by the mknod(2), utimes(2) and write(2) system calls.

Last changed time
Time when file status was last changed (inode data modification).
Changed by the chmod(2), chown(2), link(2), mknod(2), rename(2), unlink(2), utimes(2) and write(2) system calls.


#create hard link
ln <link_name> <file_name>

#create soft/symbolic link
ln -s <file_name> <link_name>

#remove symbolic links
rm <symbolic_links>
unlink symlink_name


#check files and devices mounted

mount

rootfs on / type lxfs (rw,noatime)
none on /dev type tmpfs (rw,noatime,mode=755)
sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,noatime)
proc on /proc type proc (rw,nosuid,nodev,noexec,noatime)
devpts on /dev/pts type devpts (rw,nosuid,noexec,noatime,gid=5,mode=620)
none on /run type tmpfs (rw,nosuid,noexec,noatime,mode=755)


Some linux group media and devices in /media and /mnt directories

#update partition table
partprobe /dev/sda

######### Mounting Drive Partition #########

sudo mount /dev/sda3 /media/anand


######### Unmount Drive Partition #########

sudo umount /media/anand

#get disks
sudo fdisk -l | grep '/dev/sda*'
Disk /dev/sda: 26 GiB, 27917287424 bytes, 54525952 sectors
/dev/sda1  *        2048  1050623  1048576  512M  b W95 FAT32
/dev/sda2        1052670 41940991 40888322 19.5G  5 Extended
/dev/sda3       41940992 46135295  4194304    2G 83 Linux
/dev/sda5        1052672 41940991 40888320 19.5G 83 Linux


##making file ext4 system 

sudo mkfs.ext4 /dev/sda3

mke2fs 1.45.5 (07-Jan-2020)
/dev/sda3 contains a ext4 file system labelled '2G'
	last mounted on Sat Jun 27 03:26:42 2020
Proceed anyway? (y,N) y
Creating filesystem with 524288 4k blocks and 131072 inodes
Filesystem UUID: 383cd3fa-9484-4599-b2d3-51a948c8dcf9
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done 

#list available file systems to create

mkfs {TAB} {TAB}
mkfs         mkfs.ext2    mkfs.fat     mkfs.ntfs    
mkfs.bfs     mkfs.ext3    mkfs.minix   mkfs.vfat    
mkfs.cramfs  mkfs.ext4    mkfs.msdos 




#lsblk --> list block devices

>lsblk

NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
loop0    7:0    0    55M  1 loop /snap/core18/1705
loop1    7:1    0    55M  1 loop /snap/core18/1754
loop2    7:2    0 255.6M  1 loop /snap/gnome-3-34-1804/36
loop3    7:3    0 240.8M  1 loop /snap/gnome-3-34-1804/24
loop4    7:4    0  62.1M  1 loop /snap/gtk-common-themes/1506
loop5    7:5    0  49.8M  1 loop /snap/snap-store/433
loop6    7:6    0  49.8M  1 loop /snap/snap-store/467
loop7    7:7    0  27.1M  1 loop /snap/snapd/7264
loop8    7:8    0  29.8M  1 loop /snap/snapd/8140
sda      8:0    0    26G  0 disk 
├─sda1   8:1    0   512M  0 part /boot/efi
├─sda2   8:2    0     1K  0 part 
├─sda3   8:3    0     2G  0 part 
└─sda5   8:5    0  19.5G  0 part /
sr0     11:0    1  1024M  0 rom  

#steps to create partitions

fdisk --> create partition --> format partition using mkfs --> mount file system

#create partition

sudo fdisk /dev/sda

m --> information

F --> list free unpartitioned space

p --> print partition table


####### Print Partitions ############

Command (m for help): p
Disk /dev/sda: 26 GiB, 27917287424 bytes, 54525952 sectors
Disk model: VMware Virtual S
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x0d65f401

Device     Boot   Start      End  Sectors  Size Id Type
/dev/sda1  *       2048  1050623  1048576  512M  b W95 FAT32
/dev/sda2       1052670 41940991 40888322 19.5G  5 Extended
/dev/sda5       1052672 41940991 40888320 19.5G 83 Linux


######### Create Partition #########


Command (m for help): n
Partition type
   p   primary (1 primary, 1 extended, 2 free)
   l   logical (numbered from 5)
Select (default p): 

Using default response p.
Partition number (3,4, default 3): 6
Value out of range.
Partition number (3,4, default 3): 3
First sector (41940992-54525951, default 41940992): 
Last sector, +/-sectors or +/-size{K,M,G,T,P} (41940992-54525951, default 54525951): +2GB 

Created a new partition 3 of type 'Linux' and of size 1.9 GiB.



######### Print Partition Table #########


Command (m for help): p

Disk /dev/sda: 26 GiB, 27917287424 bytes, 54525952 sectors
Disk model: VMware Virtual S
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x0d65f401

Device     Boot    Start      End  Sectors  Size Id Type
/dev/sda1  *        2048  1050623  1048576  512M  b W95 FAT32
/dev/sda2        1052670 41940991 40888322 19.5G  5 Extended
/dev/sda3       41940992 45846527  3905536  1.9G 83 Linux
/dev/sda5        1052672 41940991 40888320 19.5G 83 Linux


######### Information about Partition #########

Command (m for help): i
Partition number (1-3,5, default 5): 3

         Device: /dev/sda3
          Start: 41940992
            End: 45846527
        Sectors: 3905536
      Cylinders: 7658
           Size: 1.9G
             Id: 83
           Type: Linux
    Start-C/H/S: 317/61/1
      End-C/H/S: 807/38/2



######### Delete Partition #########

Command (m for help): d
Partition number (1-3,5, default 5): 3

Partition 3 has been deleted.



######### Write Partition Table to Disk #########

Command (m for help): w

The partition table has been altered.
Syncing disks.


 
######### Mounting Drive Partition #########

sudo mount /dev/sda3 /media/anand


######### Unmount Drive Partition #########

sudo umount /media/anand


### Default/parmanent partitions from /etc/fstab will be mounted as follows #####

mount -a

Mount a filesystem.

Options:
 -a, --all               mount all filesystems mentioned in fstab
 
 #Tutorials on new LVM system in linux
 #http://blog.frands.net/linux-lvm-how-to-182/
 
 #logical volumes groups managment is not installed by default
 
 sudo apt install lvm2
 
 #notice program name is lvm2. It is not installed by default.
 
 
Physical Volumes (PV): These are disks. There is a single LVM partition on each disk. LVM will automatically create this! These can also be RAID devices. If you run a software raid, you can simply add /dev/mdX devices. Or if you use SAN you can add the devices presented to your OS. Basically, any raw device will do.

Volume Groups (VG): The volume group are groups of physical volumes. The total size of the volume group equals the total size of all disks added to the group.

Logical Volumes (LV): These are slices of the volume group. I can decide the size of these exactly as I like and it does not matter if I  exceed the size of a single hard disk – LVM will take care of that. The operating system will through the device mapper see the logical volumes so you can add your filesystem of choice.

File Systems: The name is pretty much self explanatory. You can choose your favorite file system, e.g. ext4 and then just make the filesystem.

#Hirarchy
Partitions --> PV --> VG --> LV --> File System

#create physical volume from partitions
pvcreate /dev/sdb

sudo pvcreate /dev/sda3

WARNING: ext4 signature detected on /dev/sda3 at offset 1080. Wipe it? [y/n]: y
  Wiping ext4 signature on /dev/sda3.
  Physical volume "/dev/sda3" successfully created.

#display Physical volume information
sudo pvdisplay /dev/sda3


[root@tutsrv01 ~]# pvdisplay
  --- Physical volume ---
  PV Name               /dev/sda2
  VG Name               osvg
  PV Size               14.15 GiB / not usable 0
  Allocatable           yes
  PE Size               4.00 MiB
  Total PE              3622
  Free PE               1122
  Allocated PE          2500
  PV UUID               msF4tW-JcB1-obDQ-WjPI-2oPl-H8wi-ybEhzj


###### Volume group creation #######

sudo vgcreate VGroup /dev/sda3
sudo vgcreate <volume_group_name> <PV_name> <PV_name2>

###### display VG #######


anand@ubuntu:~$ sudo vgdisplay
  --- Volume group ---
  VG Name               VGroup
  System ID             
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  1
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                0
  Open LV               0
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               <2.00 GiB
  PE Size               4.00 MiB
  Total PE              511
  Alloc PE / Size       0 / 0   
  Free  PE / Size       511 / <2.00 GiB
  VG UUID               gidLBm-d0eG-jXfb-RS5R-0E0l-kMCH-mtIB9d


######## Create logical volume #######

sudo lvcreate -n data -L 1G VGroup
sudo lvcreate -n <lv_name> -L 1G <VG_name>


###### LV Display #######

sudo lvdisplay
  --- Logical volume ---
  LV Path                /dev/VGroup/data
  LV Name                data
  VG Name                VGroup
  LV UUID                kHo1t0-AOKe-5x1a-31U9-er90-yM1w-H4xCDP
  LV Write Access        read/write
  LV Creation host, time ubuntu, 2020-06-27 06:00:29 -0700
  LV Status              available
  # open                 0
  LV Size                1.00 GiB
  Current LE             256
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:0


###### create file system ########

sudo mkfs.ext4 /dev/VGroup/data

You will get LV path from lvdisplay command


####### mount lv ########

sudo mount /dev/VGroup/data /media/anand/

OR you can add mounting (if parmanent in /etc/fstab).

#############

Important commands

pvcreate --> pvdisplay --> vgcreate --> vgdisplay --> lvcreate --> lvdisplpay


##volume group information
sudo vgs
[sudo] password for anand: 
  VG     #PV #LV #SN Attr   VSize  VFree   
  VGroup   1   1   0 wz--n- <2.00g 1020.00m

### extend logical volumes
sudo lvextend -L +200M /dev/VGroup/data
sudo lvextend -L +1G <lv_path>

##### reduce logocal volumes
sudo lvreduce -L 200M /dev/VGroup/data
sudo lvreduce -L 2G <lv_path>

sudo lvreduce -L 200M /dev/VGroup/data
  WARNING: Reducing active and open logical volume to 200.00 MiB.
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce VGroup/data? [y/n]: y
  Size of logical volume VGroup/data changed from <1.20 GiB (306 extents) to 200.00 MiB (50 extents).
  Logical volume VGroup/data successfully resized.



###### linux know list of file systems

0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris        
 1  FAT12           27  Hidden NTFS Win 82  Linux swap / So c1  DRDOS/sec (FAT-
 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-
 3  XENIX usr       3c  PartitionMagic  84  OS/2 hidden or  c6  DRDOS/sec (FAT-
 4  FAT16 <32M      40  Venix 80286     85  Linux extended  c7  Syrinx         
 5  Extended        41  PPC PReP Boot   86  NTFS volume set da  Non-FS data    
 6  FAT16           42  SFS             87  NTFS volume set db  CP/M / CTOS / .
 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility   
 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       df  BootIt         
 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access     
 a  OS/2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O        
 b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor      
 c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad hi ea  Rufus alignment
 e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         eb  BeOS fs        
 f  W95 Ext'd (LBA) 54  OnTrackDM6      a6  OpenBSD         ee  GPT            
10  OPUS            55  EZ-Drive        a7  NeXTSTEP        ef  EFI (FAT-12/16/
11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f0  Linux/PA-RISC b
12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f1  SpeedStor      
14  Hidden FAT16 <3 61  SpeedStor       ab  Darwin boot     f4  SpeedStor      
16  Hidden FAT16    63  GNU HURD or Sys af  HFS / HFS+      f2  DOS secondary  
17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         fb  VMware VMFS    
18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fc  VMware VMKCORE 
1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fd  Linux raid auto
1c  Hidden W95 FAT3 75  PC/IX           bc  Acronis FAT32 L fe  LANstep        
1e  Hidden W95 FAT1 80  Old Minix       be  Solaris boot    ff  BBT      

for chnaging file system in fdisk type t option

#### list file system with out temp file system
 df -h -x tmpfs

#### tmpFs

tmpfs - a virtual memory filesystem
       
DESCRIPTION:

The tmpfs facility allows the creation of filesystems whose contents reside in virtual memory.Since the files on such filesystems
typically reside in RAM, file access is extremely fast.

The filesystem is automatically created when mounting a filesystem
with the type tmpfs via a command such as the following:

$ sudo mount -t tmpfs -o size=10M tmpfs /mnt/mytmpfs

A tmpfs filesystem has the following properties:

*  The filesystem can employ swap space when physical memory pressure demands it.

*  The filesystem consumes only as much physical memory and swap space as is required to store the current contents of the filesystem.

*  During a remount operation (mount -o remount), the filesystem size can be changed (without losing the existing contents of the filesystem).
